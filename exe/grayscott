#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'

opt = { width: 256, height: 256 }
OptionParser.new do |op|
  op.on('-h val', '--height', 'height of the model', Integer) { |v| opt[:height] = v }
  op.on('-w val', '--width', 'width of the model', Integer) { |v| opt[:width] = v }
  op.on('-g', '--gpu', 'use GPU(Cumo)') { |v| opt[:gpu] = v }
  op.parse!(ARGV)
end

require 'cumo/narray' if opt[:gpu]
opt.delete(:gpu)

require 'gray_scott'

module GrayScott
  class << self
    def run(opt)
      xml_path = File.expand_path('../resources/', __dir__)
      Controller.new(xml_path, height: opt[:height], width: opt[:width])
      Gtk.main
    end
  end
end

GrayScott.run(opt)
